// Code generated by "stringer -type=Delay"; DO NOT EDIT.

package main

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Delay3-0]
	_ = x[Delay5-1]
	_ = x[Delay1-2]
	_ = x[DelayN-3]
}

const _Delay_name = "Delay3Delay5Delay1DelayN"

var _Delay_index = [...]uint8{0, 6, 12, 18, 24}

func (i Delay) String() string {
	if i < 0 || i >= Delay(len(_Delay_index)-1) {
		return "Delay(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Delay_name[_Delay_index[i]:_Delay_index[i+1]]
}

func (i *Delay) FromString(s string) error {
	for j := 0; j < len(_Delay_index)-1; j++ {
		if s == _Delay_name[_Delay_index[j]:_Delay_index[j+1]] {
			*i = Delay(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: Delay")
}
