// Code generated by "stringer -type=LesionType"; DO NOT EDIT.

package main

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NoLesion-0]
	_ = x[LesionSpat1-1]
	_ = x[LesionSpat2-2]
	_ = x[LesionSpat12-3]
	_ = x[LesionTypeN-4]
}

const _LesionType_name = "NoLesionLesionSpat1LesionSpat2LesionSpat12LesionTypeN"

var _LesionType_index = [...]uint8{0, 8, 19, 30, 42, 53}

func (i LesionType) String() string {
	if i < 0 || i >= LesionType(len(_LesionType_index)-1) {
		return "LesionType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LesionType_name[_LesionType_index[i]:_LesionType_index[i+1]]
}

func (i *LesionType) FromString(s string) error {
	for j := 0; j < len(_LesionType_index)-1; j++ {
		if s == _LesionType_name[_LesionType_index[j]:_LesionType_index[j+1]] {
			*i = LesionType(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: LesionType")
}
