// Code generated by "stringer -type=LesionSize"; DO NOT EDIT.

package main

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LesionHalf-0]
	_ = x[LesionFull-1]
	_ = x[LesionSizeN-2]
}

const _LesionSize_name = "LesionHalfLesionFullLesionSizeN"

var _LesionSize_index = [...]uint8{0, 10, 20, 31}

func (i LesionSize) String() string {
	if i < 0 || i >= LesionSize(len(_LesionSize_index)-1) {
		return "LesionSize(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LesionSize_name[_LesionSize_index[i]:_LesionSize_index[i+1]]
}

func (i *LesionSize) FromString(s string) error {
	for j := 0; j < len(_LesionSize_index)-1; j++ {
		if s == _LesionSize_name[_LesionSize_index[j]:_LesionSize_index[j+1]] {
			*i = LesionSize(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: LesionSize")
}
